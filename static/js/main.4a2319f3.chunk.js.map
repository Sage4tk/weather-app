{"version":3,"sources":["ThemeContext.js","svg/search.svg","components/List.js","components/Info.js","svg/clear.svg","svg/clouds.svg","svg/rain.svg","svg/snow.svg","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeUpdateContext","useTheme","useContext","ThemeProvider","children","useState","theme","setTheme","Provider","value","List","weather","toggle","minmax","num","parseInt","className","coord","lat","toFixed","lon","main","temp_min","temp_max","humidity","kmh","windSpeed","wind","speed","Info","setWeather","setToggle","showList","infoStyle","backgroundColor","darkTheme","setDarkTheme","useEffect","themeBool","localStorage","getItem","unitBool","city","formHandler","setForm","submit","e","a","preventDefault","fetch","res","json","data","console","log","temp","style","onSubmit","type","placeholder","name","onChange","target","src","search","alt","onClick","setItem","checked","readOnly","App","themeAge","setShowList","mainStyle","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","then","iconChanger","str","clouds","rain","snow","clear","description","Date","toLocaleDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a2319f3.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\n\r\nconst ThemeContext = React.createContext();\r\nconst ThemeUpdateContext = React.createContext();\r\n\r\nexport function useTheme() {\r\n    return useContext(ThemeContext);\r\n}\r\n\r\nexport function useThemeUpdate() {\r\n    return useContext(ThemeUpdateContext);\r\n}\r\n\r\nexport function ThemeProvider({ children }) {\r\n    const [theme, setTheme] = useState(false);\r\n\r\n    const toggleTheme = () => {\r\n        setTheme(!theme);\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={theme}>\r\n            <ThemeUpdateContext.Provider value={toggleTheme}>\r\n                {children}\r\n            </ThemeUpdateContext.Provider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/search.46fe3c6b.svg\";","import React from 'react';\r\n\r\nexport default function List({ weather, toggle }) {\r\n\r\n    if (!weather) return (null)\r\n    \r\n    const minmax = (num) => {\r\n        if (toggle) return parseInt(num * 1.8 -459.67) + \" °F\"\r\n        return parseInt(num - 273.15) + \" °C\"\r\n    }\r\n\r\n    const windSpeed = (num) => {\r\n        const kmh = num * 3.6;\r\n        if (toggle) return (kmh / 1.609).toFixed(2) + \" MPH\";\r\n        return kmh.toFixed(2) + \" KM/H\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"info-bar_inside\">\r\n            <p>Latitude: {weather.coord.lat.toFixed(2)}</p>\r\n            <p>Longitude: {weather.coord.lon.toFixed(2)}</p>\r\n            <hr />\r\n            <p>Minimum Temperature: {minmax(weather.main.temp_min)}</p>\r\n            <p>Maximum Temperature: {minmax(weather.main.temp_max)}</p>\r\n            <hr />\r\n            <p>Humidity: {weather.main.humidity}%</p>\r\n            <p>Wind Speed: {windSpeed(weather.wind.speed)}</p>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useTheme, useThemeUpdate } from \"../ThemeContext\";\r\n\r\n//icons\r\nimport search from \"../svg/search.svg\"\r\n\r\n//components\r\nimport List  from \"./List\";\r\n\r\nexport default function Info({ weather, setWeather, toggle, setToggle, showList }) {\r\n    //theme converter\r\n    const theme = useTheme();\r\n    const setTheme = useThemeUpdate();\r\n\r\n    const infoStyle = {\r\n        backgroundColor: theme ? \"#0f0f0f\":\"#628CA6\"\r\n    }\r\n\r\n    //conver metric system\r\n    const toggler = () => {\r\n        setToggle(!toggle);\r\n        localStorage.setItem('units', !toggle);\r\n    }\r\n\r\n    //dark theme toggler\r\n    \r\n    const [darkTheme, setDarkTheme] = useState(false)\r\n\r\n    const toggleDark = () => {\r\n        setDarkTheme(!darkTheme);\r\n        localStorage.setItem('dark', !darkTheme);\r\n        setTheme();\r\n    }\r\n\r\n    //checks if previous settingsn\r\n    useEffect(() => {\r\n        const themeBool = localStorage.getItem('dark');\r\n        const unitBool = localStorage.getItem('units');\r\n        if (themeBool === \"true\") {\r\n            setTheme();\r\n            setDarkTheme(!darkTheme)\r\n        }\r\n\r\n        if (unitBool === \"true\") {\r\n            setToggle(true);\r\n        }\r\n    }, [])\r\n\r\n\r\n    //form handler\r\n    const [formHandler, setForm] = useState({\r\n        city: \"\"\r\n    })\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await fetch(`https://zackpersonalapi.herokuapp.com/api/weather?city=${formHandler.city}`);\r\n            const data = await res.json();\r\n            console.log(data.main.temp);\r\n            setWeather(data)\r\n            setForm({city: \"\"});\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const changeHandler = (e) => {\r\n        setForm({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={showList? \"info-bar show\":\"info-bar\"} style={infoStyle}>\r\n            <form onSubmit={submit}>\r\n                <div className=\"form-control\">\r\n                    <input type=\"text\" placeholder=\"Type your city\" name=\"city\" onChange={changeHandler} value={formHandler.city} />\r\n                    <button type=\"submit\"><img src={search} className=\"search\" alt=\"search button\"></img></button>\r\n                </div>\r\n            </form>\r\n            <List weather={weather} toggle={toggle} />\r\n            <div className=\"switch-controller\">\r\n                <div className=\"switch\" onClick={toggler}>\r\n                    <input type=\"checkbox\" checked={toggle} readOnly={true}/>\r\n                    <span className=\"slider round\"></span>\r\n                </div>\r\n                <p>Measurement Converter</p>\r\n            </div>\r\n            <div className=\"switch-controller\">\r\n                <div className=\"switch\" onClick={toggleDark}>\r\n                    <input type=\"checkbox\" checked={darkTheme} readOnly={true}/>\r\n                    <span className=\"slider round\"></span>\r\n                </div>\r\n                <p>Dark Mode</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/clear.0686791f.svg\";","export default __webpack_public_path__ + \"static/media/clouds.0d1fa9bd.svg\";","export default __webpack_public_path__ + \"static/media/rain.d256bc7c.svg\";","export default __webpack_public_path__ + \"static/media/snow.81662c92.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"./style.css\"\n\n//components\nimport Info from './components/Info';\n\n//img\nimport clear from \"./svg/clear.svg\";\nimport clouds from \"./svg/clouds.svg\"\nimport rain from \"./svg/rain.svg\"\nimport snow from \"./svg/snow.svg\"\n\n//context\nimport { useTheme } from './ThemeContext';\n\nfunction App() {\n  //theme\n  const themeAge = useTheme();\n\n  //list state for responsiveness\n  const [showList, setShowList] = useState(false);\n\n  //inline css\n  const mainStyle = {\n    backgroundColor: themeAge ? \"#1f1f1f\" : \"#7BAFCF\"\n  }\n  //ask for coords\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      fetch(`https://zackpersonalapi.herokuapp.com/api/weather?lat=${parseInt(pos.coords.latitude)}&lon=${parseInt(pos.coords.longitude)}`)\n      .then((res) => res.json())\n      .then((data) => setWeather(data));\n    })\n  }, [])\n\n  const [weather, setWeather] = useState(null);\n  const [toggle, setToggle] = useState(false);\n\n  //metric switcher\n  const minmax = () => {\n    if (toggle) return parseInt(weather.main.temp * 1.8 -459.67) + \"°F\"\n    return parseInt(weather.main.temp - 273.15) + \"°C\"\n  }\n\n  //weather icon\n  const iconChanger = (str) => {\n    switch(str) {\n      case \"Clouds\":\n        return clouds\n      case \"Rain\": case \"Drizzle\": case \"Thunderstorm\":\n        return rain\n      case \"Snow\":\n        return snow\n      default:\n        return clear\n    }\n  }\n\n  //get local time\n  const timeZone = () => {\n    const getTime = new Date();\n    return getTime.toLocaleDateString();\n  }\n\n  const weatherCard = () => {\n    if (!weather) return (null)\n    return (\n      <div className=\"left-side_display\">\n        <p className=\"temp\">{minmax()}</p>\n        <div className=\"display_icon\">\n          <img src={iconChanger(weather.weather[0].main)} alt=\"weather icon\"></img>\n          <p>{weather.weather[0].description}</p>\n        </div>\n        <div className=\"country\">\n          <p>{weather.name}</p>\n          <p>{timeZone()}</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"left-side\" style={mainStyle}>\n        <h1>Weather App</h1>\n        <div className=\"burger\" onClick={() => setShowList(!showList)}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        {weatherCard()}\n      </div>\n      <Info weather={weather} setWeather={setWeather} toggle={toggle} setToggle={setToggle} showList={showList} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from './ThemeContext'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}